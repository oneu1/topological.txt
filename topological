function topologicalSort(graph)
    n = size(graph, 1);
    in_degree = zeros(1, n);

    for i = 1:n
        for j = 1:n
            if graph(j, i) == 1
                in_degree(i) = in_degree(i) + 1;
            end
        end
    end

    queue = [];
    for i = 1:n
        if in_degree(i) == 0
            queue = [queue, i];
        end
    end

    topo_order = [];

    while size(queue, 2) > 0
        node = queue(1);
        queue = queue(2:$);

        topo_order = [topo_order, node];

        for i = 1:n
            if graph(node, i) == 1
                in_degree(i) = in_degree(i) - 1;
                if in_degree(i) == 0
                    queue = [queue, i];
                end
            end
        end
    end

    if size(topo_order, 2) != n
        disp("The graph contains a cycle! Topological sort not possible.");
    else
        disp("Topological Sort:");
        disp(topo_order);
    end
endfunction

graph = [
    0, 1, 0, 0, 0;
    0, 0, 1, 1, 0;
    0, 0, 0, 0, 1;
    0, 0, 0, 0, 0;
    0, 0, 0, 0, 0
];

topologicalSort(graph);
